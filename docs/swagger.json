{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/login": {
            "post": {
                "description": "Authenticates a user and returns a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login request body",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token for authenticated user",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request due to invalid input or incorrect login details",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves the profile and balance of the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile information",
                        "schema": {
                            "$ref": "#/definitions/response.ProfileResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - user not authenticated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "description": "Allows a new user to register with their details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Registration request body",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "schema": {
                            "$ref": "#/definitions/response.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request due to invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Conflict - user already exists",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/slot/history": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves the user's spin history, showing past spins with their results",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Slot"
                ],
                "summary": "Get spin history",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of past spin results",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.SpinHistoryResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/slot/spin": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Initiates a spin with the specified bet amount and returns the result.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Slot"
                ],
                "summary": "Spin the slot machine",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Spin request body",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SpinRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Spin result with win amount",
                        "schema": {
                            "$ref": "#/definitions/response.SpinResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request due to invalid input or insufficient funds",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/status": {
            "get": {
                "description": "Returns a simple status message indicating the server is operational",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Status"
                ],
                "summary": "Check server status",
                "responses": {
                    "200": {
                        "description": "Server status message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/wallet/deposit": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Allows the user to deposit funds into their wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wallet"
                ],
                "summary": "Deposit funds into wallet",
                "parameters": [
                    {
                        "type": "string",
                        "format": "bearer",
                        "description": "JWT Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Deposit amount",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DepositRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated wallet balance",
                        "schema": {
                            "$ref": "#/definitions/response.DepositResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - user not authenticated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/wallet/withdraw": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Allows the user to withdraw funds from their wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wallet"
                ],
                "summary": "Withdraw funds from wallet",
                "parameters": [
                    {
                        "type": "string",
                        "format": "bearer",
                        "description": "JWT Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Withdraw amount",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WithdrawRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated wallet balance",
                        "schema": {
                            "$ref": "#/definitions/response.WithdrawResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - user not authenticated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.DepositRequest": {
            "type": "object",
            "required": [
                "amount"
            ],
            "properties": {
                "amount": {
                    "description": "Transaction amount, required field",
                    "type": "number"
                }
            }
        },
        "request.LoginRequest": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "description": "User's login email, required and must be a valid email format",
                    "type": "string"
                },
                "password": {
                    "description": "User's password, required and must be at least 8 characters",
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "request.RegisterRequest": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "description": "User's login email, required and must be a valid email format",
                    "type": "string"
                },
                "password": {
                    "description": "User's password, required and must be at least 8 characters",
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "request.SpinRequest": {
            "type": "object",
            "required": [
                "bet_amount"
            ],
            "properties": {
                "bet_amount": {
                    "description": "Bet amount, required and must be greater than 0",
                    "type": "number"
                }
            }
        },
        "request.WithdrawRequest": {
            "type": "object",
            "required": [
                "amount"
            ],
            "properties": {
                "amount": {
                    "description": "Transaction amount, required field",
                    "type": "number"
                }
            }
        },
        "response.DepositResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "description": "Updated wallet balance after the deposit transaction",
                    "type": "number"
                }
            }
        },
        "response.ProfileResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "description": "User's current wallet balance",
                    "type": "number"
                },
                "id": {
                    "description": "Unique identifier for the user",
                    "type": "string"
                },
                "login": {
                    "description": "User's login name",
                    "type": "string"
                }
            }
        },
        "response.RegisterResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Unique identifier for the newly registered user",
                    "type": "string"
                },
                "login": {
                    "description": "Login name for the newly registered user",
                    "type": "string"
                }
            }
        },
        "response.SpinHistoryResponse": {
            "type": "object",
            "properties": {
                "bet_amount": {
                    "description": "The amount the user bet on this spin",
                    "type": "number"
                },
                "date": {
                    "description": "The date and time of this spin, formatted as \"YYYY-MM-DD HH:MM:SS\"",
                    "type": "string"
                },
                "win_amount": {
                    "description": "The amount the user won on this spin",
                    "type": "number"
                }
            }
        },
        "response.SpinResponse": {
            "type": "object",
            "properties": {
                "win_amount": {
                    "description": "The amount the user won on this spin",
                    "type": "number"
                }
            }
        },
        "response.WithdrawResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "description": "Updated wallet balance after the withdrawal transaction",
                    "type": "number"
                }
            }
        }
    }
}